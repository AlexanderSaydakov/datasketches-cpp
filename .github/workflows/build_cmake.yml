name: C/C++ CI

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "MaxOS Latest Clang", #artifact: "macOS.tar.xz",
            os: macos-latest,
            cc: "clang", cxx: "clang++"
          }
        - {
            name: "Ubuntu Latest GCC", #artifact: "linux.tar.xz",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++"
          }
        - {
            name: "Windows Latest MSVC", #artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Windows Latest MinGW", #artifact: "Windows-MinGW.tar.xz",
            os: windows-latest,
            cc: "gcc", cxx: "g++"
          }
            
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure
        run: mkdir build && cd build && cmake ..
      - name: Build C++ unit tests
        run: cmake --build build --config Release
      - name: Run C++ tests
        run: cmake --build build --target test
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: '3.x' # grabs latest minor version of python3
      - name: Build and run Python tests
        run: python setup.py test
